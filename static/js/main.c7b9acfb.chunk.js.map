{"version":3,"sources":["components/UserProfile/UserProfile.js","components/MovieCard/MovieCard.js","components/MoviesContainer/MoviesContainer.js","components/CharacterCard/CharacterCard.js","components/CharactersContainer/CharactersContainer.js","components/UserForm/UserForm.js","apiCalls.js","components/App/App.js","index.js"],"names":["UserProfile","name","quote","knowledgeLevel","favNum","favorites","length","className","to","MovieCard","id","title","date","characters","getCharacters","fixedDate","Date","toString","split","slice","join","roman","convert","num","onClick","MoviesContainer","movies","allMovies","sort","a","b","episode_id","map","movie","i","key","release_date","CharacterCard","homeworld","population","species","films","updateFavs","character","filmsList","film","src","alt","CharactersContainer","movieInfo","isLoading","characterInfo","opening_crawl","UserForm","handleChange","event","setState","target","value","handleFormSubmit","props","submitUser","state","isNotDisabled","this","type","onChange","disabled","Component","fetchCharacters","charactersUrls","promises","fetch","then","res","json","data","speciesType","getSpecies","homeworldInfo","getHomeworldInfo","info","getFilms","titles","Promise","all","homeworldUrl","speciesUrl","filmsUrls","filmsInfo","getTitle","filmTitle","filmUrl","response","App","user","haveUser","selectedCharacters","catch","error","addFavorite","updatedFavs","removeFavorite","filter","fav","includes","ok","Error","results","allFilms","exact","path","render","match","selectedMovie","find","parseInt","params","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c7b9acfb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './UserProfile.scss';\n\nconst UserProfile = ({ name, quote, knowledgeLevel, favorites }) => {\n\n  const favNum = favorites.length;\n\n  return (\n      <aside className=\"profile\">\n        <h2>Star Wars Trivia</h2>\n        <h3>Hi {name}!</h3>\n        <h4>Favorite Quote:</h4>\n        <h5>\"{quote}\"</h5>\n        <h4>Knowledge Level:</h4>\n        <h5>{knowledgeLevel}</h5>\n        <Link to='/favorites'>\n          <button>Favorites {favNum}</button>\n        </Link>\n        <Link to='/'>\n          <button>Sign Out</button>\n        </Link>\n        <Link to='/movies'>\n          <button>All Movies</button>\n        </Link>\n      </aside>\n    );\n};\n\nexport default UserProfile;\n\nUserProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  quote: PropTypes.string.isRequired,\n  knowledgeLevel: PropTypes.string.isRequired,\n  favorites: PropTypes.array.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieCard.scss';\n\nconst MovieCard = ({ id, title, date, characters, getCharacters }) => {\n\n  const fixedDate = new Date(date + 'T00:00').toString().split(' ').slice(1, 4).join(' ');\n\n  const convert = (num) => {\n    if(num < 1) {return '' }\n    if (num >= 4){return 'IV' + convert(num - 4)}\n    if (num >= 1){return 'I' + convert(num - 1)}\n  };\n\n  const roman = convert(id);\n\n  return (\n      <div className=\"movie_card\">\n        <h3 className=\"episode\">Episode {roman}</h3>\n        <h4 className=\"movie_card-title\">{title}</h4>\n        <h5>Released on {fixedDate}</h5>\n        <Link to={`/movies/${id}`}>\n          <button \n            className=\"movie_card-btn\"\n            onClick={() => getCharacters(characters)}\n          >View Characters</button>\n        </Link>\n      </div>\n    );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired, \n  date: PropTypes.string.isRequired, \n  characters: PropTypes.array.isRequired, \n  getCharacters: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MoviesContainer.scss';\nimport MovieCard from '../MovieCard/MovieCard';\n\nconst MoviesContainer = ({ movies, getCharacters }) => {\n  let sortedMovies = movies.sort((a, b) => a.episode_id - b.episode_id);\n\n  const allMovies = sortedMovies.map((movie, i) => {\n    return <MovieCard\n      key={i}\n      id={movie.episode_id}\n      title={movie.title}\n      date={movie.release_date}\n      characters={movie.characters}\n      getCharacters={getCharacters}\n      />\n    });\n\n  return (\n      <section className=\"MovieContainer\">\n        { allMovies }\n      </section>\n    );\n};\n\nexport default MoviesContainer;\n\nMoviesContainer.propTypes = {\n  movies: PropTypes.array.isRequired,\n  getCharacters: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CharacterCard.scss';\n\nconst CharacterCard = ({ name, homeworld, population, species, films, updateFavs }) => {\n\n  const character = { name, homeworld, population, species, films };\n\n  const filmsList = films.map((film, i) => {\n    return <li key={i}>{film}</li>\n  });\n\n  return (\n      <div className=\"CharacterCard\">\n        <h3 className=\"CharacterCard_name\">{name}</h3>\n      <h4 className=\"CharacterCard_homeWorld-title\">Homeworld:<span className=\"CharacterCard_homeWorld\">{homeworld}</span></h4>\n      <h4 className=\"CharacterCard_population-title\">Population:<span className=\"CharacterCard_population\">{population}</span></h4>\n    <h4 className=\"CharacterCard_species-title\">Species:<span className=\"CharacterCard_species\">{species}</span></h4>\n        <h4 className=\"CharacterCard_films\">Related Films: </h4>\n          <ul className=\"CharacterCard_films-ul\">\n            {filmsList}\n          </ul>\n    <button className=\"CharacterCard_character-btn\"\n          onClick={() => updateFavs(character)}\n        ><img src=\"\" alt=\"\" />Favorite</button>\n      </div>\n    );\n};\n\nexport default CharacterCard;\n\nCharacterCard.propTypes = { \n  name: PropTypes.string.isRequired, \n  homeworld: PropTypes.string.isRequired, \n  population: PropTypes.any.isRequired, \n  species: PropTypes.string.isRequired,\n  films: PropTypes.array.isRequired,\n  updateFavs: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CharactersContainer.scss';\nimport CharacterCard from '../CharacterCard/CharacterCard';\n\nconst CharactersContainer = ({ characters, movieInfo, updateFavs, isLoading }) => {\n\n  const characterInfo = characters.map((character) => {\n    return <CharacterCard \n            key={character.name} \n            name={character.name}\n            homeworld={character.homeworld}\n            population={character.population}\n            species={character.species}\n            films={character.films}\n            updateFavs={updateFavs}  \n          />\n    });\n\n  return (\n     \n      <section className=\"characterContainer_section\">\n\n        {!movieInfo &&\n            <header className=\"favs-header\">\n              <h2>Your Favorite Characters</h2>\n            </header>}\n\n        {characters.length === 0 && !movieInfo && <p className=\"favs-prompt\">Looks like you do not have any favorites yet. Head back to Movies and click on View Characters to add some favorites here!</p>}\n    \n        {movieInfo && <header className='scroll'>  \n          <h2 className=\"title\">{movieInfo.title}</h2>\n          <div className=\"galaxy\">\n            <h3 className=\"away\">A long time ago in a galaxy far, far away...\n            </h3>\n            <p>{movieInfo.opening_crawl}</p>\n          </div>\n        </header>}\n        {isLoading && <h1>Loading ...</h1>}\n        {characterInfo}\n      </section>\n    );\n};\n\nexport default CharactersContainer;\n\nCharactersContainer.propTypes = {\n  characters: PropTypes.array.isRequired,\n  movieInfo: PropTypes.any,\n  updateFavs: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool\n};\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './UserForm.scss';\n\n\nclass UserForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      quote: '',\n      knowledgeLevel: ''\n    }\n  }\n\n  handleChange = event => {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleFormSubmit = event => {\n      this.props.submitUser({\n      name: this.state.name,\n      quote: this.state.quote,\n      knowledgeLevel: this.state.knowledgeLevel\n    })\n\n  }\n  \n  render() {\n    const isNotDisabled = (this.state.name !== '') && (this.state.quote !== '') && (this.state.knowledgeLevel !== '')\n    return (\n      <div className=\"user_profile-div\">\n        <img className=\"user_profile-image\" alt=\"Yo Jedi laser gif animation gif r2d2 cat menu starwars force jedi\" src=\"https://cdn.dribbble.com/users/1539273/screenshots/6122439/spoilers_drib.gif\" />\n        <div className=\"user_profile-h1-div\">\n          <h1 className=\"user_profile-h1\">WELCOME TO <br /> SWAPI TRIVIA! </h1>\n        </div>\n        <form className=\"user_form\">\n          <div className=\"user_name-div\">\n            <label className=\"user_name-label\">Name</label>\n            <input className=\"user_name-input\" type=\"text\" value={this.state.name} name=\"name\" onChange={(event) => this.handleChange(event)} />\n          </div>\n          <div className=\"user_quote-div\">\n            <label className=\"user_quote-label\">Favorite SW Quote?</label>\n            <textarea className=\"user_quote-textarea\" value={this.state.quote} name=\"quote\" onChange={(event) => this.handleChange(event)} />\n          </div>\n          <div className=\"user_radio-btn-div\">\n            <label className=\"user_radio-title\">How much do you know about Star Wars?</label>\n            <div className=\"user_radio-div\">\n              <label className=\"user_radio-label\"> \n                <input className=\"user_radio-input\" type='radio' name=\"knowledgeLevel\" value='Star What?' \n                  onChange={(event) => this.handleChange(event)} /> \n                Star What?\n              </label>\n            </div>\n            <div className=\"user_radio-div\">\n              <label className=\"user_radio-label\"> \n                <input className=\"user_radio-input\" type='radio' name=\"knowledgeLevel\" value='Jedi in Training?'\n                onChange={(event) => this.handleChange(event)}/> \n                Jedi in Training\n              </label>\n            </div>\n            <div className=\"user_radio-div\">\n              <label className=\"user_radio-label\"> \n                <input className=\"user_radio-input\" type='radio'  value='My firtsborns name is yoda' \n                name=\"knowledgeLevel\"\n                onChange={(event) => this.handleChange(event)} /> \n                My Firstborns names is Yoda\n              </label>\n            </div> \n          </div>\n          <Link to='/movies'><button className=\"user-submit-btn\" type=\"submit\" disabled={!isNotDisabled} onClick={this.handleFormSubmit}>ENTER</button></Link>\n        </form>\n      </div>\n      )\n  }\n};\n\nexport default UserForm;\n\nUserForm.propTypes = {\n  submitUser: PropTypes.func.isRequired\n};","\nexport const getMovies = () => {\n  return fetch('https://swapi.co/api/films/')\n    .then(res => {\n      if(!res.ok) {\n        throw Error('Error getting your movies. Try again later.')\n      }\n      return res.json()})\n    .then(films => {\n      return films.results.map(film => {\n        const { episode_id, title, release_date, opening_crawl, characters } = film;\n        return {\n          episode_id,\n          title,\n          release_date,\n          opening_crawl,\n          characters\n        }\n      })  \n  })\n};\n\nexport const fetchCharacters = charactersUrls => {\n  const firstTen = charactersUrls.slice(0, 10);\n  const promises = firstTen.map(character => {\n    return fetch(character)\n      .then(res => res.json())\n      .then(data => {\n        const { name, homeworld, species, films } = data;\n        const speciesType = getSpecies(species).then(type => type);\n        const homeworldInfo = getHomeworldInfo(homeworld).then(info => info);\n        const movies = getFilms(films).then(titles => titles);\n\n        const characterData = Promise.all([speciesType, homeworldInfo, movies])\n          .then(data => ({ \n            name, \n            species: data[0],\n            homeworld: data[1].name,\n            population: data[1].population,\n            films: data[2]}));\n\n          return (characterData);\n      });\n  });\n  return Promise.all(promises);\n};\n\nconst getHomeworldInfo = homeworldUrl => {\n  return fetch(homeworldUrl)\n    .then(res => res.json())\n    .then(info => {\n      const { name, population} = info;\n      return({name, population});\n    })\n}; \n\nconst getSpecies = speciesUrl => {\n  return fetch(speciesUrl)\n    .then(res => res.json())\n    .then(species => species.name);\n};\n\nconst getFilms = (filmsUrls) => {\n  const filmsInfo = filmsUrls.map(film => {\n    return getTitle(film)\n      .then(filmTitle => filmTitle);\n  })\n  return Promise.all(filmsInfo);\n};\n\nconst getTitle = (filmUrl) => {\n  return fetch(filmUrl)\n    .then(response => response.json())\n    .then(film => film.title);\n};\n\n\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.scss';\nimport UserProfile from '../UserProfile/UserProfile';\nimport MoviesContainer from '../MoviesContainer/MoviesContainer';\nimport CharactersContainer from '../CharactersContainer/CharactersContainer';\nimport UserForm from '../UserForm/UserForm';\nimport { getMovies, fetchCharacters } from '../../apiCalls';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      movies: [],\n      selectedCharacters: [],\n      favorites: [],\n      haveUser: false,\n      isLoading: true,\n      error: ''\n    }\n  } \n\n  componentDidMount() {\n    getMovies()\n      .then(allFilms => this.setState({ movies: allFilms, isLoading: false }))\n      .catch(error => this.setState({ error: 'Something is wrong in the universe'}))\n    }\n\n  submitUser = (user) => {\n    this.setState({user, haveUser: true })\n  }\n  \n  getCharacters = (charactersUrls) => {\n    this.setState({isLoading: true})\n    fetchCharacters(charactersUrls)\n      .then(data => this.setState({ selectedCharacters: data, isLoading: false }))\n      .catch(error => this.setState({ error: 'Something is wrong in the universe'}))\n  }\n\n  addFavorite = (character) => {\n    const { favorites } = this.state\n    const updatedFavs = [...favorites, character]\n      this.setState({ favorites: updatedFavs })\n  }\n\n  removeFavorite = (character) => {\n    const { favorites } = this.state\n    const updatedFavs = favorites.filter(fav => fav.name !== character.name)\n    this.setState({ favorites: updatedFavs })\n  }\n\n  updateFavs = (character) => {\n    const { favorites } = this.state\n    const names = favorites.map(fav => fav.name)\n     names.includes(character.name) ? this.removeFavorite(character) : this.addFavorite(character)\n  }\n\n  render() {\n    const { user, movies, selectedCharacters, favorites, haveUser, isLoading, error } = this.state;\n    \n    return (\n      <div className='App'>\n        <Route exact path='/' render={() => \n          <UserForm\n            submitUser={this.submitUser} />} />\n        <main>\n          {haveUser && <UserProfile {...user} favorites={favorites}/>}\n          {error && <h2>{error}</h2>}\n          <Route exact path='/movies' render={() => \n            <MoviesContainer \n              movies={movies} \n              getCharacters={this.getCharacters} />} />\n          <Route exact path='/movies/:id' render={({ match }) => {\n            const selectedMovie = movies.find(movie => movie.episode_id === parseInt(match.params.id))\n            return (\n            <CharactersContainer \n              characters={selectedCharacters}\n              updateFavs={this.updateFavs} \n              movieInfo={selectedMovie} \n              isLoading={isLoading} />)}} />\n          <Route exact path='/favorites' render={() => \n            <CharactersContainer \n              characters={favorites}\n              updateFavs={this.updateFavs}\n                />} />\n        </main> \n      </div>\n    )\n  }\n};\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nconst router = (\n  <Router>\n    <App />\n  </Router>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n"],"sourceRoot":""}